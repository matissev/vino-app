/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
html {
  zoom: 0.55;
}
body {
  -webkit-touch-callout: none;
  /* prevent callout to copy image, etc when tap to hold */
  -webkit-text-size-adjust: none;
  /* prevent webkit from resizing text to fit */
  -webkit-user-select: none;
  /* prevent copy paste, to allow, change 'none' to 'text' */
  margin: 0;
  position: relative;
  height: 1334px;
  width: 750px;
  background: blue;
  outline: 1px solid black;
  background: url(../img/background.jpg) no-repeat;
  background-size: 750px 1334px;
  font-family: brandon, sans-serif;
}
.screen {
  position: absolute;
  display: block;
  height: 100%;
  width: 100%;
}
#connexion {
  background: url(../img/connexion.png) no-repeat;
  background-size: cover;
  z-index: 2;
  opacity: 1;
  -webkit-transition: opacity 0.25s ease-in;
          transition: opacity 0.25s ease-in;
}
#connexion #login-button {
  position: relative;
  top: 75%;
  margin: 0 auto;
  text-align: center;
  line-height: 75px;
  display: block;
  font-size: 36px;
  text-transform: uppercase;
  color: white;
  text-decoration: none;
  font-weight: lighter;
  width: 530px;
  height: 75px;
  border: 3px solid white;
}
#connexion.hidden {
  opacity: 0;
}
#app-content {
  opacity: 0;
  z-index: 1;
  -webkit-transition: opacity 0.25s ease-out 0.25s;
          transition: opacity 0.25s ease-out 0.25s;
}
#app-content.shown {
  opacity: 1;
}
#home {
  background: url(../img/home.png) no-repeat;
  background-size: cover;
}
#days {
  background: url(../img/days.png) no-repeat;
  background-size: cover;
}
#menu {
  margin: 0 auto;
  position: relative;
  display: block;
  line-height: 22px;
  top: 174px;
  width: 660px;
  border-bottom: 1px solid white;
  height: 40px;
  font-size: 27px;
  text-transform: uppercase;
  text-align: center;
  color: rgba(255, 255, 255, 0.5);
  font-weight: lighter;
}
#menu span {
  height: 100%;
  display: block;
  width: 33%;
  float: left;
}
#menu .selected {
  color: #ffffff;
  font-weight: normal;
}
#menu .selected:after {
  content: "";
  display: block;
  width: 100%;
  position: relative;
  top: 15px;
  border-bottom: 7px solid #332842;
}
/* BRANDON FONT */
@font-face {
  font-family: 'brandon';
  src: url('../fonts/brandon_reg.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'brandon';
  src: url('../fonts/brandon_reg_it.ttf') format('truetype');
  font-weight: normal;
  font-style: italic;
}
@font-face {
  font-family: 'brandon';
  src: url('../fonts/brandon_med.ttf') format('truetype');
  font-weight: bold;
  font-style: normal;
}
@font-face {
  font-family: 'brandon';
  src: url('../fonts/brandon_light.ttf') format('truetype');
  font-weight: 100;
  font-style: normal;
}
@font-face {
  font-family: 'brandon';
  src: url('../fonts/brandon_bld.ttf') format('truetype');
  font-weight: bolder;
  font-style: normal;
}

/*# sourceMappingURL=data:application/json;base64, */